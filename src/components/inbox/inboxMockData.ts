import { Inbox, InboxItemType, InboxAttachment } from "@/types/inboxType";
import { Invitation, InvitationAction, OrganizationUserRole } from "@/types/invitationType";
import { Task, TaskStatus } from "@/types/taskTypes";
import { CalendarType } from "@/types/calendarType";
import { User, UserRole, UserStatus } from "@/types/userTypes";
import { Participant } from "@/types/participantType";
import { Access } from "@/types/accessType";
import { FileType } from "@/types/timelineType";

// Mock Access data
const createAccess = (role: UserRole): Access => ({
  userRole: role,
  createOrganization: role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  accessOrganization: true,
  manageOrganization: role === UserRole.ORG_MANAGER || role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  createOrganizationManagers: role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  accessOrganizationManagers: role !== UserRole.USER,
  createOrganizationUsers: role === UserRole.ORG_MANAGER || role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  accessOrganizationUsers: role !== UserRole.USER,
  accessProjects: true,
  createProjects: role !== UserRole.USER,
  editProjects: role !== UserRole.USER,
  deleteProjects: role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  accessTeam: true,
  mapTeam: role !== UserRole.USER,
  accessTimeline: true,
  manageTimeline: role !== UserRole.USER,
  accessActivities: true,
  manageActivities: role !== UserRole.USER,
  accessResources: true,
  manageResources: role !== UserRole.USER,
  deleteResources: role === UserRole.ADMIN || role === UserRole.SUPER_ADMIN,
  accessTasks: true,
  hold_cancle_tasks: role !== UserRole.USER,
  assignTasks: role !== UserRole.USER,
  accessCalendar: true,
  manageCalendar: role !== UserRole.USER,
  accessChat: true,
  createGroups: role !== UserRole.USER,
  manageGroups: role !== UserRole.USER,
});

// Mock Users
const mockUsers: User[] = [
  {
    id: "user1",
    firstname: "John",
    lastname: "Doe",
    email: "john.doe@example.com",
    organizationId: "org1",
    role: UserRole.ORG_MANAGER,
    createdAt: "2025-01-15T10:00:00Z",
    updatedAt: "2025-06-01T10:00:00Z",
    isActive: true,
    isEmailVerified: true,
    isPhoneVerified: true,
    access: createAccess(UserRole.ORG_MANAGER),
    status: UserStatus.AVAILABLE,
    phoneNumber: "+1234567890",
    profilePicture: "https://api.dicebear.com/7.x/initials/svg?seed=John%20Doe&backgroundColor=d1d5db&fontFamily=Arial&fontSize=36&chars=2",
    lastLogin: "2025-06-09T08:00:00Z",
    lastPasswordChange: "2025-05-01T10:00:00Z",
  },
  {
    id: "user2",
    firstname: "Jane",
    lastname: "Smith",
    email: "jane.smith@example.com",
    organizationId: "org1",
    role: UserRole.USER,
    createdAt: "2025-02-01T10:00:00Z",
    updatedAt: "2025-06-02T10:00:00Z",
    isActive: true,
    isEmailVerified: true,
    isPhoneVerified: false,
    access: createAccess(UserRole.USER),
    status: UserStatus.BUSY,
    phoneNumber: "+1234567891",
    profilePicture: "https://api.dicebear.com/7.x/initials/svg?seed=Jane%20Smith&backgroundColor=d1d5db&fontFamily=Arial&fontSize=36&chars=2",
    lastLogin: "2025-06-08T14:30:00Z",
  },
  {
    id: "user3",
    firstname: "Alice",
    lastname: "Johnson",
    email: "alice.johnson@example.com",
    organizationId: "org2",
    role: UserRole.ADMIN,
    createdAt: "2025-01-20T10:00:00Z",
    updatedAt: "2025-06-03T10:00:00Z",
    isActive: true,
    isEmailVerified: true,
    isPhoneVerified: true,
    access: createAccess(UserRole.ADMIN),
    status: UserStatus.AVAILABLE,
    phoneNumber: "+1234567892",
    profilePicture: "https://api.dicebear.com/7.x/initials/svg?seed=Alice%20Johnson&backgroundColor=d1d5db&fontFamily=Arial&fontSize=36&chars=2",
    lastLogin: "2025-06-09T09:15:00Z",
  },
  {
    id: "user4",
    firstname: "Bob",
    lastname: "Wilson",
    email: "bob.wilson@example.com",
    organizationId: "org2",
    role: UserRole.ORG_USER,
    createdAt: "2025-02-10T10:00:00Z",
    updatedAt: "2025-06-04T10:00:00Z",
    isActive: false,
    isEmailVerified: true,
    isPhoneVerified: false,
    access: createAccess(UserRole.ORG_USER),
    status: UserStatus.OFFLINE,
    profilePicture: "https://api.dicebear.com/7.x/initials/svg?seed=Bob%20Wilson&backgroundColor=d1d5db&fontFamily=Arial&fontSize=36&chars=2",
    lastLogin: "2025-06-05T16:00:00Z",
  },
  {
    id: "user5",
    firstname: "Carol",
    lastname: "Davis",
    email: "carol.davis@example.com",
    organizationId: "org3",
    role: UserRole.USER,
    createdAt: "2025-03-01T10:00:00Z",
    updatedAt: "2025-06-05T10:00:00Z",
    isActive: true,
    isEmailVerified: true,
    isPhoneVerified: true,
    access: createAccess(UserRole.USER),
    status: UserStatus.DONOT_DISTURB,
    phoneNumber: "+1234567894",
    profilePicture: "https://api.dicebear.com/7.x/initials/svg?seed=Carol%20Davis&backgroundColor=d1d5db&fontFamily=Arial&fontSize=36&chars=2",
    lastLogin: "2025-06-09T07:45:00Z",
  },
];

// Mock Participants
const mockParticipants: Participant[] = [
  {
    id: "participant1",
    userId: "user1",
    projectId: "project1",
    isLead: true,
    isTeamMember: true,
    role: "Project Manager",
    createdAt: "2025-03-15T10:00:00Z",
    updatedAt: "2025-06-01T10:00:00Z",
    user: mockUsers[0],
  },
  {
    id: "participant2",
    userId: "user2",
    projectId: "project1",
    isLead: false,
    isTeamMember: true,
    role: "Developer",
    createdAt: "2025-03-20T10:00:00Z",
    updatedAt: "2025-06-02T10:00:00Z",
    user: mockUsers[1],
  },
  {
    id: "participant3",
    userId: "user3",
    projectId: "project2",
    isLead: true,
    isTeamMember: true,
    role: "Technical Lead",
    createdAt: "2025-04-01T10:00:00Z",
    updatedAt: "2025-06-03T10:00:00Z",
    user: mockUsers[2],
  },
  {
    id: "participant4",
    userId: "user4",
    projectId: "project2",
    isLead: false,
    isTeamMember: true,
    role: "Designer",
    createdAt: "2025-04-05T10:00:00Z",
    updatedAt: "2025-06-04T10:00:00Z",
    user: mockUsers[3],
  },
  {
    id: "participant5",
    userId: "user5",
    projectId: "project3",
    isLead: false,
    isTeamMember: true,
    role: "QA Engineer",
    createdAt: "2025-04-10T10:00:00Z",
    updatedAt: "2025-06-05T10:00:00Z",
    user: mockUsers[4],
  },
];

// Mock Invitations
const mockInvitations: Invitation[] = [
  {
    id: "invite1",
    formId: "user1",
    toEmail: "newuser1@example.com",
    invitedTo: "TechCorp Organization",
    subject: "Invitation to join TechCorp as a Team Member",
    message: "You've been invited to join our development team. We're excited to have you on board!",
    action: InvitationAction.JOIN_ORGANIZATION,
    org_id: "org1",
    role: OrganizationUserRole.MEMBER,
    createdAt: "2025-06-01T10:00:00Z",
    updatedAt: "2025-06-01T10:00:00Z",
  },
  {
    id: "invite2",
    formId: "user3",
    toEmail: "manager@example.com",
    invitedTo: "InnovateLab Organization",
    subject: "Invitation to join as Organization Manager",
    message: "We would like to invite you to join our organization as a manager. Your expertise would be valuable to our team.",
    action: InvitationAction.JOIN_ORGANIZATION_AS_MANAGER,
    org_id: "org2",
    role: OrganizationUserRole.MANAGER,
    createdAt: "2025-06-03T10:00:00Z",
    updatedAt: "2025-06-03T10:00:00Z",
  },
  {
    id: "invite3",
    formId: "user2",
    toEmail: "external@client.com",
    invitedTo: "Mobile App Development Project",
    subject: "External Project Collaboration Invitation",
    message: "You're invited to collaborate on our mobile app development project as an external consultant.",
    action: InvitationAction.ACCEPT_EXTERNAL_PROJECT_INVITATION,
    role: OrganizationUserRole.CLIENT,
    createdAt: "2025-06-05T10:00:00Z",
    updatedAt: "2025-06-05T10:00:00Z",
  },
];

// Mock Tasks
const mockTasks: Task[] = [
  {
    id: "task1",
    projectId: "project1",
    title: "Implement user authentication system",
    description: "Develop a secure user authentication system with JWT tokens and password encryption.",
    dueDate: "2025-06-15T23:59:59Z",
    assignedTo_id: "participant2",
    assignedTo: mockParticipants[1],
    assignedBy_id: "participant1",
    assignedBy: mockParticipants[0],
    isPlanned: true,
    isImportant: true,
    status: TaskStatus.IN_PROGRESS,
    createdAt: "2025-06-01T10:00:00Z",
    updatedAt: "2025-06-08T10:00:00Z",
    completedAt: "",
    priority: 1,
  },
  {
    id: "task2",
    projectId: "project2",
    title: "Design user interface mockups",
    description: "Create wireframes and high-fidelity mockups for the main application screens.",
    dueDate: "2025-06-12T23:59:59Z",
    assignedTo_id: "participant4",
    assignedTo: mockParticipants[3],
    assignedBy_id: "participant3",
    assignedBy: mockParticipants[2],
    isPlanned: true,
    isImportant: false,
    status: TaskStatus.COMPLETED,
    createdAt: "2025-05-25T10:00:00Z",
    updatedAt: "2025-06-07T10:00:00Z",
    completedAt: "2025-06-07T15:30:00Z",
    priority: 2,
  },
  {
    id: "task3",
    projectId: "project3",
    title: "Perform quality assurance testing",
    description: "Execute comprehensive testing of the application including unit tests, integration tests, and user acceptance testing.",
    dueDate: "2025-06-20T23:59:59Z",
    assignedTo_id: "participant5",
    assignedTo: mockParticipants[4],
    assignedBy_id: "participant1",
    assignedBy: mockParticipants[0],
    isPlanned: false,
    isImportant: true,
    status: TaskStatus.PENDING,
    createdAt: "2025-06-05T10:00:00Z",
    updatedAt: "2025-06-05T10:00:00Z",
    completedAt: "",
    priority: 1,
  },
];

// Mock Calendar Events
const mockCalendarEvents: CalendarType[] = [
  {
    id: "calendar1",
    participantId: "participant1",
    projectId: "project1",
    date: "2025-06-10T14:00:00Z",
    title: "Sprint Planning Meeting",
    description: "Plan the next sprint and discuss user stories and acceptance criteria.",
    createdAt: "2025-06-01T10:00:00Z",
    updatedAt: "2025-06-01T10:00:00Z",
  },
  {
    id: "calendar2",
    participantId: "participant3",
    projectId: "project2",
    date: "2025-06-11T10:00:00Z",
    title: "Technical Architecture Review",
    description: "Review the technical architecture and discuss scalability concerns.",
    createdAt: "2025-06-02T10:00:00Z",
    updatedAt: "2025-06-02T10:00:00Z",
  },
  {
    id: "calendar3",
    participantId: "participant2",
    projectId: "project1",
    date: "2025-06-12T09:00:00Z",
    title: "Code Review Session",
    description: "Review recent code changes and discuss best practices.",
    createdAt: "2025-06-03T10:00:00Z",
    updatedAt: "2025-06-03T10:00:00Z",
  },
];

// Mock Attachments
const mockAttachments: InboxAttachment[] = [
  {
    id: "attachment1",
    name: "project-requirements.pdf",
    inboxIs: "inbox1",
    type: FileType.PDF,
    size: 1250000,
  },
  {
    id: "attachment2",
    name: "design-mockups.zip",
    inboxIs: "inbox3",
    type: FileType.ZIP,
    size: 2450000,
  },
  {
    id: "attachment3",
    name: "authentication-flow.docx",
    inboxIs: "inbox5",
    type: FileType.DOCX,
    size: 850000,
  },
  {
    id: "attachment4",
    name: "error-logs.txt",
    inboxIs: "inbox7",
    type: FileType.TXT,
    size: 125000,
  },
  {
    id: "attachment5",
    name: "meeting-recording.mp4",
    inboxIs: "inbox9",
    type: FileType.VIDEO,
    size: 15750000,
  },
];

// Main Mock Inbox Data
export const mockInboxItems: Inbox[] = [
  {
    id: "inbox1",
    fromId: "user1",
    participantId: "participant1",
    userId: "user2",
    projectId: "project1",
    title: "Welcome to the TechCorp team!",
    description: "We're excited to have you join our development team. Please review the attached project requirements and let us know if you have any questions.",
    type: InboxItemType.INVITE,
    inviteId: "invite1",
    invitation: mockInvitations[0],
    seenAt: "",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-01T10:00:00Z",
    updatedAt: "2025-06-01T11:00:00Z",
    fromUser: mockUsers[0],
    attachments: [mockAttachments[0]],
  },
  {
    id: "inbox2",
    fromId: "user2",
    participantId: "participant2",
    userId: "user1",
    projectId: "project1",
    title: "Authentication system implementation update",
    description: "I've made significant progress on the user authentication system. The JWT implementation is complete and I'm now working on the password encryption module.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "2025-06-02T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-02T10:00:00Z",
    updatedAt: "2025-06-02T11:00:00Z",
    fromUser: mockUsers[1],
    attachments: [],
  },
  {
    id: "inbox3",
    fromId: "user3",
    participantId: "participant3",
    userId: "user4",
    projectId: "project2",
    title: "Organization Manager Position Invitation",
    description: "We would like to invite you to join InnovateLab as an Organization Manager. Your leadership skills and technical expertise make you an ideal candidate for this role.",
    type: InboxItemType.INVITE,
    inviteId: "invite2",
    invitation: mockInvitations[1],
    seenAt: "2025-06-03T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-03T10:00:00Z",
    updatedAt: "2025-06-03T11:00:00Z",
    fromUser: mockUsers[2],
    attachments: [mockAttachments[1]],
  },
  {
    id: "inbox4",
    fromId: "user1",
    participantId: "participant1",
    userId: "user2",
    projectId: "project1",
    title: "Sprint Planning Meeting Scheduled",
    description: "Our next sprint planning meeting has been scheduled for June 10th at 2:00 PM. We'll be discussing user stories and acceptance criteria for the upcoming sprint.",
    type: InboxItemType.NOTIFICATION,
    inviteId: "",
    calendarId: "calendar1",
    calendarEvent: mockCalendarEvents[0],
    seenAt: "",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-04T10:00:00Z",
    updatedAt: "2025-06-04T11:00:00Z",
    fromUser: mockUsers[0],
    attachments: [],
  },
  {
    id: "inbox5",
    fromId: "user1",
    participantId: "participant1",
    userId: "user2",
    projectId: "project1",
    title: "Authentication System Task Assignment",
    description: "You have been assigned a new task: Implement user authentication system. This is a high-priority task with a deadline of June 15th. Please review the attached documentation.",
    type: InboxItemType.TASK,
    inviteId: "",
    taskId: "task1",
    task: mockTasks[0],
    seenAt: "2025-06-05T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-05T10:00:00Z",
    updatedAt: "2025-06-05T11:00:00Z",
    fromUser: mockUsers[0],
    attachments: [mockAttachments[2]],
  },
  {
    id: "inbox6",
    fromId: "user4",
    participantId: "participant4",
    userId: "user3",
    projectId: "project2",
    title: "UI Mockups completed ahead of schedule",
    description: "Great news! I've completed the UI mockups for the main application screens ahead of schedule. The designs are ready for review and feedback.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-06T10:00:00Z",
    updatedAt: "2025-06-06T11:00:00Z",
    fromUser: mockUsers[3],
    attachments: [],
  },
  {
    id: "inbox7",
    fromId: "user2",
    participantId: "participant2",
    userId: "user1",
    projectId: "project1",
    title: "External Project Collaboration Invitation",
    description: "We have an opportunity to collaborate on a mobile app development project with an external client. This could be a great learning experience and expand our portfolio.",
    type: InboxItemType.INVITE,
    inviteId: "invite3",
    invitation: mockInvitations[2],
    seenAt: "2025-06-07T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-07T10:00:00Z",
    updatedAt: "2025-06-07T11:00:00Z",
    fromUser: mockUsers[1],
    attachments: [mockAttachments[3]],
  },
  {
    id: "inbox8",
    fromId: "user3",
    participantId: "participant3",
    userId: "user4",
    projectId: "project2",
    title: "Technical Architecture Review Meeting",
    description: "Reminder: We have scheduled a technical architecture review meeting for June 11th at 10:00 AM. Please come prepared to discuss scalability concerns and performance optimizations.",
    type: InboxItemType.NOTIFICATION,
    inviteId: "",
    calendarId: "calendar2",
    calendarEvent: mockCalendarEvents[1],
    seenAt: "",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-08T10:00:00Z",
    updatedAt: "2025-06-08T11:00:00Z",
    fromUser: mockUsers[2],
    attachments: [],
  },
  {
    id: "inbox9",
    fromId: "user1",
    participantId: "participant1",
    userId: "user5",
    projectId: "project3",
    title: "Quality Assurance Testing Assignment",
    description: "You have been assigned to perform comprehensive quality assurance testing for the application. This includes unit tests, integration tests, and user acceptance testing.",
    type: InboxItemType.TASK,
    inviteId: "",
    taskId: "task3",
    task: mockTasks[2],
    seenAt: "2025-06-09T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-09T10:00:00Z",
    updatedAt: "2025-06-09T11:00:00Z",
    fromUser: mockUsers[0],
    attachments: [mockAttachments[4]],
  },
  {
    id: "inbox10",
    fromId: "user5",
    participantId: "participant5",
    userId: "user1",
    projectId: "project3",
    title: "Testing environment setup completed",
    description: "I've successfully set up the testing environment and performed initial smoke tests. The application is ready for comprehensive testing procedures.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "",
    isArchived: true,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-01T10:00:00Z",
    updatedAt: "2025-06-01T11:00:00Z",
    fromUser: mockUsers[4],
    attachments: [],
  },
  {
    id: "inbox11",
    fromId: "user2",
    participantId: "participant2",
    userId: "user1",
    projectId: "project1",
    title: "Code Review Session Reminder",
    description: "Don't forget about our code review session scheduled for June 12th at 9:00 AM. We'll be reviewing recent changes and discussing best practices for the authentication module.",
    type: InboxItemType.NOTIFICATION,
    inviteId: "",
    calendarId: "calendar3",
    calendarEvent: mockCalendarEvents[2],
    seenAt: "2025-06-02T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-02T10:00:00Z",
    updatedAt: "2025-06-02T11:00:00Z",
    fromUser: mockUsers[1],
    attachments: [],
  },
  {
    id: "inbox12",
    fromId: "user3",
    participantId: "participant3",
    userId: "user2",
    projectId: "project2",
    title: "Database optimization suggestions",
    description: "I've reviewed the current database structure and have some suggestions for optimization. The query performance could be improved significantly with proper indexing.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "",
    isArchived: false,
    isDeleted: true,
    isStarred: false,
    timestamp: "2025-06-03T10:00:00Z",
    updatedAt: "2025-06-03T11:00:00Z",
    fromUser: mockUsers[2],
    attachments: [],
  },
  {
    id: "inbox13",
    fromId: "user4",
    participantId: "participant4",
    userId: "user3",
    projectId: "project2",
    title: "Design system documentation update",
    description: "I've updated the design system documentation to include the new component library and style guidelines. Please review and provide feedback.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "2025-06-04T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-04T10:00:00Z",
    updatedAt: "2025-06-04T11:00:00Z",
    fromUser: mockUsers[3],
    attachments: [],
  },
  {
    id: "inbox14",
    fromId: "user1",
    participantId: "participant1",
    userId: "user3",
    projectId: "project1",
    title: "Project milestone achieved!",
    description: "Congratulations team! We've successfully completed the first major milestone of our project. The authentication system is now fully implemented and tested.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "",
    isArchived: false,
    isDeleted: false,
    isStarred: true,
    timestamp: "2025-06-05T10:00:00Z",
    updatedAt: "2025-06-05T11:00:00Z",
    fromUser: mockUsers[0],
    attachments: [],
  },
  {
    id: "inbox15",
    fromId: "user5",
    participantId: "participant5",
    userId: "user1",
    projectId: "project3",
    title: "Bug report: Login form validation",
    description: "I found a bug in the login form validation. The email field doesn't properly validate email formats in certain edge cases. This needs to be fixed before release.",
    type: InboxItemType.MESSAGE,
    inviteId: "",
    seenAt: "2025-06-06T12:00:00Z",
    isArchived: false,
    isDeleted: false,
    isStarred: false,
    timestamp: "2025-06-06T10:00:00Z",
    updatedAt: "2025-06-06T11:00:00Z",
    fromUser: mockUsers[4],
    attachments: [],
  },
];

// Export individual collections for testing
export const mockUsers_data = mockUsers;
export const mockParticipants_data = mockParticipants;
export const mockInvitations_data = mockInvitations;
export const mockTasks_data = mockTasks;
export const mockCalendarEvents_data = mockCalendarEvents;
export const mockAttachments_data = mockAttachments;