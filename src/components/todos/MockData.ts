import { Task, TaskStatus } from '@/types/taskTypes';
import { v4 as uuidv4 } from 'uuid';

export const mockTasks: Task[] = [
  {
    id: uuidv4(),
    projectId: 'project-01',
    title: 'Initial project planning',
    description: 'Create a roadmap for Q3 milestones.',
    dueDate: '2025-06-15',
    assignedTo_id: 'user-01',
    assignedBy_id: 'user-01',
    isPlanned: true,
    isImportant: true,
    status: TaskStatus.IN_PROGRESS,
    createdAt: '2025-06-01',
    updatedAt: '2025-06-05',
    completedAt: '',
    priority: 1,
  },
  {
    id: uuidv4(),
    projectId: 'project-01',
    title: 'Write API documentation',
    description: 'Add Swagger docs for all endpoints.',
    dueDate: '2025-06-10',
    assignedTo_id: 'user-03',
    assignedBy_id: 'user-02',
    isPlanned: true,
    isImportant: false,
    status: TaskStatus.PENDING,
    createdAt: '2025-06-02',
    updatedAt: '2025-06-03',
    completedAt: '',
    priority: 2,
  },
  {
    id: uuidv4(),
    projectId: 'project-02',
    title: 'Fix auth flow bugs',
    description: 'Resolve login issues and add JWT refresh.',
    dueDate: '2025-06-08',
    assignedTo_id: 'user-03',
    assignedBy_id: 'user-03',
    isPlanned: true,
    isImportant: true,
    status: TaskStatus.IN_PROGRESS,
    createdAt: '2025-06-02',
    updatedAt: '2025-06-06',
    completedAt: '',
    priority: 1,
  },
  {
    id: uuidv4(),
    projectId: 'project-03',
    title: 'Schedule team sync-up',
    description: 'Create calendar invite for sprint review.',
    dueDate: '2025-06-11',
    assignedTo_id: 'user-05',
    assignedBy_id: 'user-04',
    isPlanned: false,
    isImportant: false,
    status: TaskStatus.ON_HOLD,
    createdAt: '2025-06-03',
    updatedAt: '2025-06-04',
    completedAt: '',
    priority: 3,
  },
  {
    id: uuidv4(),
    projectId: 'project-02',
    title: 'Create test cases',
    description: 'Add unit tests for service layer.',
    dueDate: '2025-06-12',
    assignedTo_id: 'user-05',
    assignedBy_id: 'user-05',
    isPlanned: true,
    isImportant: true,
    status: TaskStatus.COMPLETED,
    createdAt: '2025-06-01',
    updatedAt: '2025-06-07',
    completedAt: '2025-06-07',
    priority: 1,
  },

  // Generate 18 more mock tasks dynamically
  ...Array.from({ length: 18 }, (_, i) => {
    const userId = `user-${i + 6}`;
    const isSelfTask = i % 2 === 0;
    const assignedTo_id = isSelfTask ? userId : `user-${i + 7}`;
    const assignedBy_id = userId;
    const completed = i % 3 === 0;
    return {
      id: uuidv4(),
      projectId: `project-${(i % 3) + 1}`,
      title: `Task ${i + 6}`,
      description: `This is the description for task ${i + 6}.`,
      dueDate: `2025-06-${String((i % 20) + 6).padStart(2, '0')}`,
      assignedTo_id,
      assignedBy_id,
      isPlanned: isSelfTask,
      isImportant: i % 3 === 0,
      status: [
        TaskStatus.PENDING,
        TaskStatus.IN_PROGRESS,
        TaskStatus.COMPLETED,
        TaskStatus.ON_HOLD,
        TaskStatus.CANCELLED,
      ][i % 5],
      createdAt: `2025-06-${String((i % 5) + 1).padStart(2, '0')}`,
      updatedAt: `2025-06-${String((i % 5) + 3).padStart(2, '0')}`,
      completedAt: completed ? `2025-06-${String((i % 20) + 7).padStart(2, '0')}` : '',
      priority: (i % 3) + 1,
    } as Task;
  }),
];
